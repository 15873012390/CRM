<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zktr.crmproject.dao.mybatis.HTIComplaintDao">

    <resultMap id="complaintMap" type="com.zktr.crmproject.pojos.Complaint">
        <id column="com_id" property="comId"></id>
        <result column="title" property="title"></result>
        <result column="reception_person" property="receptionPerson"></result>
        <result column="classify" property="classify"></result>
        <result column="describes" property="describes"></result>
        <result column="com_date" property="comDate"></result>
        <result column="complainant" property="complainant"></result>
        <result column="emergency_level" property="emergencyLevel"></result>
        <result column="treatment_process" property="treatmentProcess"></result>
        <result column="deal_result" property="dealResult"></result>
        <result column="spent_time" property="spentTime"></result>
        <result column="cus_feedback" property="cusFeedback"></result>
        <result column="return_confirmation" property="returnConfirmation"></result>
        <result column="remarks" property="remarks"></result>
        <association property="customer" javaType="com.zktr.crmproject.pojos.Customer">
            <id column="cus_id" property="cusId"></id>
            <result column="cus_name" property="cusName"></result>
        </association>
    </resultMap>

    <select id="queryAllByPage" resultMap="complaintMap">
        select * from complaint left join customer on complaint.cus_id = customer.cus_id order by complaint.com_id desc
    </select>

    <select id="queryById" resultMap="complaintMap">
    select * from complaint left join customer on complaint.cus_id = customer.cus_id where com_id = #{comId} order by complaint.com_id desc
    </select>

    <select id="queryComplaintByPage" resultMap="complaintMap" parameterType="com.zktr.crmproject.vo.ComplaintAdvancedSearch">
        select * from complaint cp,customer ct where cp.cus_id = ct.cus_id
        <if test="title!=null and title.length!=0">
            and cp.title = #{title}
        </if>
        <if test="cusId!=null and cusId!=''">
            and ct.cus_id = #{cusId}
        </if>
        <if test="comDate!=null and comDate.length!=0">
            and cp.com_date between #{s1} and #{s2}
        </if>
        <if test="emergencyLevel!=null and emergencyLevel.length!=0">
           and cp.emergency_level in
            <foreach collection="emergencyLevel" index="index" item="el"
                     open="(" separator="," close=")">
               #{el}
            </foreach>
        </if>
        <if test="receptionPerson!=null and receptionPerson!=''">
            and cp.reception_person = #{receptionPerson}
        </if>
        <if test="spentTime!=null and spentTime.length!=0">
            and cp.spent_time in
            <foreach collection="spentTime" index="index" item="st"
                     open="(" separator="," close=")">
                #{st}
            </foreach>
        </if>
        <if test="classify!=null and classify.length!=0">
            and cp.classify in
            <foreach collection="classify" index="index" item="c"
                     open="(" separator="," close=")">
                #{c}
            </foreach>
        </if>
        <if test="dealResult!=null and dealResult.length!=0">
            and cp.deal_result in
            <foreach collection="dealResult" index="index" item="dr"
                     open="(" separator="," close=")">
                #{dr}
            </foreach>
        </if>
        order by cp.com_id desc
    </select>

    <select id="queryLikeComplaint" resultMap="complaintMap">
        select * from complaint cp,customer ct where cp.cus_id = ct.cus_id
        <if test="value!=null and value.length!=0 and value!='全部数据'">
            <choose>
                <when test="value=='未处理'.toString() || value=='处理中'.toString() || value=='处理完成'.toString()">
                    and cp.deal_result=#{value}
                </when>
                 <when test="value=='非常紧急'.toString() || value=='急'.toString() || value=='普通'.toString()">
                and cp.emergency_level=#{value}
                </when>
                <when test="value=='产品投诉'.toString() || value=='服务投诉'.toString() || value=='客户意见'.toString() || value=='其他'.toString()">
                    and cp.classify=#{value}
                </when>
            </choose>
        </if>
        <choose>
            <when test="input!=null and select=='投诉主题'">
                and cp.title like #{input}
            </when>
        </choose>
        order by cp.com_id desc
    </select>

    <select id="pieChartQuery" resultType="Map">
        select
        <if test="selectValue==1">
            spent_time
        </if>
        <if test="selectValue==2">
            classify
        </if>
        as name,count(*) as value from complaint
        group by
        <if test="selectValue==1">
            spent_time
        </if>
        <if test="selectValue==2">
            classify
        </if>
    </select>

    <select id="queryByMonth" resultType="Map">
        select m.id name, IFNULL(b,0) value from
(
  select 1 as id union select 2 union select 3 union select 4 union select 5 union select 6
  union select 7 union select 8 union select 9 union select 10 union select 11 union select 12
) m
left join
(select month(com_date) a,count(title) b from complaint
where DATE_FORMAT(com_date,'%Y')=DATE_FORMAT(now(),'%Y')
GROUP BY month(com_date)) n
on m.id = n.a order by m.id
    </select>

    <select id="queryByMonthBySelect" resultType="Map">
        select m.id name, IFNULL(b,0) value from
(
  select 1 as id union select 2 union select 3 union select 4 union select 5 union select 6
  union select 7 union select 8 union select 9 union select 10 union select 11 union select 12
) m
left join
(select month(com_date) a,count(title) b from complaint
where DATE_FORMAT(com_date,'%Y')=#{year}
GROUP BY month(com_date)) n
on m.id = n.a order by m.id
    </select>


    <select id="queryByCustomer" resultType="Map">
        select cus.cus_name name,count(*) value
        from complaint c,customer cus where c.cus_id=cus.cus_id GROUP BY c.cus_id limit 10
    </select>

    <insert id="insertComplaint" parameterType="Complaint" useGeneratedKeys="true" keyProperty="comId">
        insert into complaint values(#{comId},#{customer.cusId},#{title},#{receptionPerson},#{classify},#{describes},#{comDate},#{complainant},#{emergencyLevel},
        #{treatmentProcess},#{dealResult},#{spentTime},#{cusFeedback},#{returnConfirmation},#{remarks})
    </insert>

    <update id="updateComplaint" parameterType="Complaint">
        update complaint set com_id =#{comId},cus_id=#{customer.cusId},title=#{title},reception_person=#{receptionPerson},classify=#{classify},describes=#{describes},com_date=#{comDate},complainant=#{complainant},emergency_level=#{emergencyLevel},treatment_process=#{treatmentProcess},
        deal_result=#{dealResult},spent_time=#{spentTime},cus_feedback=#{cusFeedback},return_confirmation=#{returnConfirmation},remarks=#{remarks} where com_id = #{comId}
    </update>

    <delete id="deleteByComId">
        delete from complaint where com_id = #{comId}
    </delete>







</mapper>
